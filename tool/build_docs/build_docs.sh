#! /bin/sh --
# ============================================================================
#                         Copyright 2020 Gennaro Prota
#
#                   Licensed under the 3-Clause BSD License.
#              (See accompanying file 3_CLAUSE_BSD_LICENSE.txt or
#               <https://opensource.org/licenses/BSD-3-Clause>.)
# ____________________________________________________________________________
#
#       Builds the library documentation (using Doxygen).
#
#       Syntax:
#           build_docs breath_root
#
#       where:
#
#           breath_root
#
#               Full path to the root directory of the source tree
#               (without any trailing slash).
#
#       Note:
#           normally, there's no need to invoke this script manually: it
#           will be invoked by GNU Make when issuing the command
#
#               make documentation
# ----------------------------------------------------------------------------

set -eu

.   "$BREATH_ROOT/tool/shell/file_name.shc"
.   "$BREATH_ROOT/tool/shell/script.shc"


post_process_html_files()
{
    for file in $1
    do
        base_name=` get_base_name "$file" `
        if [ "$base_name" != "top__level__namespace_8hpp.html" -a       \
             "$base_name" != "top__level__namespace_8hpp_source.html" ]
        then
            printf '%s\n' "+ $file"
            fix_namespace_name "$file"
        else
            printf '%s\n' "- $file"
        fi
    done
}

post_process_javascript_files()
{
    for file in $1
    do
        printf '%s\n' "+ $file"
        fix_namespace_name "$file"
    done
}

fix_namespace_name()
{
    source_file=$1
    temp_file="$temp_dir/"` get_base_name "$source_file" `

    #       Fortunately, when applied to the JavaScript files, this will
    #       not replace "breath_ns" in the names of the HTML files
    #       generated by Doxygen, as those will actually contain
    #       "breath__ns", with two underscores.
    #
    #       However, and this is the only glitch I noticed, it will
    #       replace "breath_ns" in the JavaScript file that maps the
    #       definition of breath_ns itself: this means that, if you type
    #       "breath_ns" in the search field, you'll get "breath",
    #       instead, in the search results. But the link will still
    #       work. So I'm not bothering fixing this. (Consider that,
    #       normally, the documentation for breath_ns is internal, and
    #       isn't generated.)
    # ------------------------------------------------------------------------
    sed_cmd='s/breath_ns/breath/g'

    sed -e "$sed_cmd" "$source_file" > "$temp_file" &&  \
        mv "$temp_file" "$source_file"
}


if [ $# -ne 1 ]
then
    quit_script 'wrong number of arguments.'
fi

if [ ! ` doxygen --version 2>/dev/null ` ]
then
    quit_script \
        'could not run Doxygen; is the directory of the exe in your PATH?'
fi


temp_dir=/tmp/` script_name `_$$
trap 'rm -fr "$temp_dir"' 0 1 2 15
mkdir -p "$temp_dir"

root_dir=$1
output_dir="$root_dir/doc"

cd "$root_dir/doc/source"
doxygen doxygen.cfg
exit_code=$?
if [ $exit_code != 0 ]
then
    quit_script 'an error occurred.'
else
    printf '\n'
    printf '%s\n' 'Post-processing HTML files...'
    post_process_html_files "$output_dir/html/*.html"

    printf '\n'
    printf '%s\n' 'Post-processing JavaScript files...'
    post_process_javascript_files "$output_dir/html/search/*.js"

    printf '\n'
    printf '%s\n' 'Documentation built.'
fi

# Local Variables:
# mode: shell-script
# indent-tabs-mode: nil
# sh-indentation: 4
# End:
# vim: set ft=sh et sts=4 sw=4:
