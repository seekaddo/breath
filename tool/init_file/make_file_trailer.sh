#! /bin/sh --
# ============================================================================
#                      Copyright 2008-2010 Gennaro Prota
#
#                   Licensed under the 3-Clause BSD License.
#              (See accompanying file 3_CLAUSE_BSD_LICENSE.txt or
#               <https://opensource.org/licenses/BSD-3-Clause>.)
# ____________________________________________________________________________

set -eu

.   "$BREATH_ROOT/tool/shell/here_document.shc"


language="$1"

# The value we use for most (not all) source file types
# ----------------------------------------------------------------------------
usual_offset=4
indent_offset="$usual_offset"
tab_key_offset="$usual_offset"


#       We "mask" things a bit, both for Emacs and for Vim, to avoid
#       that they get heavily confused when opening this file :-)
#
#       The final sed substitutions "unmask" them.
# ----------------------------------------------------------------------------
dump_here_document "$language"                  |
sed 's/%sw/'"$indent_offset"'/g'                |
sed 's/%sts/'"$tab_key_offset"'/g'              |
sed 's/EmacsVariablesList/Local Variables/'     |
sed 's/VimModeline/vim/g'


#       Here's the set of here-documents, one for each of the
#       supported languages.
#
#       Rationale:
#       ----------
#
#       Initially, the various trailers were generated by simple
#       printf's: there were only a couple of special cases (for
#       makefiles, for instance, which want tab characters) and I
#       hadn't yet introduced Emacs support; the code, then, was
#       reasonably straightforward. Adding support for more types,
#       however, especially those for which Emacs doesn't already ship
#       a mode package, it become apparent that the various trailers
#       had too few in common to be set up that way; so I went for
#       this "enumerative" approach, with a here-document for each
#       file type.
#
#       Caution:
#       ========
#
#        - keep the entries in alphabetical order (C locale)
#
#        - keep the following files in sync:
#
#           - .editorconfig
#           - .gitattributes
#           - language_traits.txt (could perhaps be merged with this)
#           - make_file_trailer.sh
#
#        - when modifying this file (if ever) please review *all*
#          the entries.
# ----------------------------------------------------------------------------


# About "mode: xx", is Emacs case-sensitive on "xx"??
# Aesthetically I prefer lower-case, and it seems to work, but
# the manuals seem to use always upper-case --gps


:   <<AWK
EmacsVariablesList:
mode: awk
indent-tabs-mode: nil
c-basic-offset: %sw
End:
VimModeline: set ft=awk et sts=%sts sw=%sw:
AWK


:   <<C++
EmacsVariablesList:
mode: c++
indent-tabs-mode: nil
c-basic-offset: %sw
End:
VimModeline: set ft=cpp et sts=%sts sw=%sw:
C++

:   <<Asm
EmacsVariablesList:
mode: asm
End:
VimModeline: set ft=asm et sts=%sts sw=%sw:
Asm

# A CSS mode is included in Emacs v.22.2.2 and later
#
:   <<CSS
EmacsVariablesList:
mode: css
indent-tabs-mode: nil
css-indent-offset: %sw
coding: utf-8
End:
VimModeline: set ft=css et sts=%sts sw=%sw:
VimModeline: set fenc=utf-8 nobomb:
CSS


:   <<Emacs-Lisp
EmacsVariablesList:
mode: emacs-lisp
indent-tabs-mode: nil
lisp-body-indent: 2
End:
VimModeline: set ft=lisp et sts=2 sw=2:
Emacs-Lisp


:   <<HTML
EmacsVariablesList:
mode: nxml
indent-tabs-mode: nil
nxml-child-indent: %sw
nxml-attribute-indent: %sw
coding: utf-8
End:
VimModeline: set ft=html et sts=%sts sw=%sw:
VimModeline: set fenc=utf-8 nobomb:
HTML


# Historical note (now outdated):
# -------------------------------
#
# All "our" HTML (not Doxygen's) is actually XHTML. We could use
# nXhtml, but I'm not sure. It requires (a separate package and)
# Emacs 22. Since that was released in June 2007, it might be too
# recent, for now, to have widespread usage in production. About
# nxml, instead, there seems to be contradicting info on the net:
# does it work with Emacs 21 or not? --gps
#
:   <<XHTML
EmacsVariablesList:
mode: nxml
indent-tabs-mode: nil
nxml-child-indent: %sw
nxml-attribute-indent: %sw
coding: utf-8
End:
VimModeline: set ft=xhtml et sts=%sts sw=%sw:
VimModeline: set fenc=utf-8 nobomb:
XHTML


# No equivalent for c-basic-offset? --gps
#
:   <<Make
EmacsVariablesList:
mode: makefile
indent-tabs-mode: nil
End:
VimModeline: set ft=make et sts=%sts sw=%sw:
Make


:   <<Shell
EmacsVariablesList:
mode: shell-script
indent-tabs-mode: nil
sh-indentation: %sw
End:
VimModeline: set ft=sh et sts=%sts sw=%sw:
Shell


:   <<Text
EmacsVariablesList:
mode: text
indent-tabs-mode: nil
End:
VimModeline: set ft=txt et sts=%sts sw=%sw:
Text


# I'm afraid there's no Emacs mode for this --gps
#
:   <<Vim
EmacsVariablesList:
indent-tabs-mode: nil
End:
VimModeline: set ft=vim et sts=%sts sw=%sw:
Vim


:   <<XSLT
EmacsVariablesList:
mode: nxml
indent-tabs-mode: nil
nxml-child-indent: %sw
nxml-attribute-indent: %sw
coding: utf-8
End:
VimModeline: set ft=xslt et sts=%sts sw=%sw:
VimModeline: set fenc=utf-8 nobomb:
XSLT

:   <<Batch
EmacsVariablesList:
mode: bat
indent-tabs-mode: nil
batch-indent-level: 4
End:
VimModeline: set ft=dosbatch et sts=%sts sw=%sw:
Batch

# Local Variables:
# mode: shell-script
# indent-tabs-mode: nil
# sh-indentation: 4
# End:
# vim: set ft=sh et sts=4 sw=4:
